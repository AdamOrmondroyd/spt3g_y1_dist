#!/usr/bin/env python3

import sys
import os.path as osp
import shutil
import os
import subprocess

colors={'BOLD':'\x1b[01;1m','RED':'\x1b[01;31m','GREEN':'\x1b[32m','YELLOW':'\x1b[33m','PINK':'\x1b[35m','BLUE':'\x1b[01;34m','CYAN':'\x1b[36m','GREY':'\x1b[37m','NORMAL':'\x1b[0m'}

def logtest(test,white, green="ok",yellow="failure",extrayellow="",fail=True, szwhite=50):
  if test:
    print(white+" "*max(1,szwhite-len(white))+":"+colors["GREEN"]+" ",green+colors["NORMAL"])
    return True
  if fail:
    print(white+" "*max(1,szwhite-len(white))+":"+colors["RED"]+" ",yellow+colors["NORMAL"])
  else:
    print(white+" "*max(1,szwhite-len(white))+":"+colors["YELLOW"]+" ",yellow+colors["NORMAL"])
  if extrayellow:
    print(colors["PINK"]+"%s"%str(extrayellow)+colors["NORMAL"])
  if fail:
    sys.exit(-1)
  return False

def trymkdir(drpath):
  R = True
  e = ""
  try:
    os.mkdir(drpath)
  except Exception as err:
    R = False
    e=str(err).decode("utf-8")
    pass
  logtest(R,"Create "+drpath,yellow=e)

def install_clikfile(clikfile):
  logtest(osp.lexists("../"+clikfile),"Check for availibility of the data file",yellow="Not found",extrayellow="Check your spt3g release. Cannot find %s in the root directory"%clikfile)

  if osp.lexists(arg1+"/data/spt_data/"+clikfile):
    R = True
    e = ""
    try:
      if not osp.islink(arg1+"/data/spt_data/"+clikfile):
        shutil.rmtree(arg1+"/data/spt_data/"+clikfile)
      else:
        os.unlink(arg1+"/data/spt_data/"+clikfile)
    except Exception as err:
      R = False
      e=str(err).decode("utf-8")
    logtest(R,"Spt3g data already in cobaya package, erase it",yellow=e)
  
  R = True
  e = ""
  try:
    shutil.copytree("../"+clikfile,arg1+"/data/spt_data/"+clikfile)
  except Exception as err:
    R = False
    e=str(err).decode("utf-8")
  logtest(R,"Copy "+clikfile+" in "+arg1+"/data/spt_data/",yellow=e)
  
  
if len(sys.argv) not in [2,3]:
  print ("usage: %s /path/to/cobaya/packages [/path/to/clik]")
  sys.exit(-1)
print(colors["BOLD"] + colors["BLUE"] + "Installing spt3g code and data in cobaya\n\n"+colors["NORMAL"])

arg1 = osp.abspath(sys.argv[1])
arg2 = ""
if len(sys.argv)==3:
  arg2 = osp.abspath(sys.argv[2])


# check for cobaya package dir
logtest(osp.isdir(arg1),"Check cobaya package path",arg1,arg1+" does not exists")
if not logtest(osp.isdir(arg1+"/data"),"Check cobaya package path contains data","ok","data not found, create it", fail=False):
  trymkdir(arg1+"/data")

if (osp.lexists(arg1+"/data/spt_data")) and (osp.isdir(arg1+"/data/spt_data")):
  logtest(True,arg1+"/data/spt_data", "already exists")
elif  (osp.lexists(arg1+"/data/spt_data")) and (osp.isfile(arg1+"/data/spt_data")):
  logtest(False,arg1+"/data/spt_data", "is a file","Check your cobaya package directory and manually remove %s"%(arg1+"/data/spt_data"))
else:
  trymkdir(arg1+"/data/spt_data")

#install_clikfile("spt3g_Y1_v3_EETE.clik")
install_clikfile("spt3g_Y1_v1_TTTEEE.clik")

if not logtest(osp.isdir(arg1+"/data"),"Check cobaya package path contains code","ok","code not found, create it", fail=False):
  trymkdir(arg1+"/code")

logtest(osp.lexists("SPT3G_Y1"),"Check for availibility of the cobaya metadata files",yellow="Not found",extrayellow="Check your spt3g release. Cannot find SPT3G_Y1 directory in the cobaya_files directory")

if osp.lexists(arg1+"/code/SPT3G_Y1"):
  R = True
  e = ""
  try:
    if not osp.islink(arg1+"/code/SPT3G_Y1"):
      shutil.rmtree(arg1+"/code/SPT3G_Y1")
    else:
      os.unlink(arg1+"/code/SPT3G_Y1")
  except Exception as err:
    R = False
    e=str(err).decode("utf-8")
  logtest(R,"Spt3g code already in cobaya package, erase it",yellow=e)

R = True
e = ""
try:
  shutil.copytree("SPT3G_Y1",arg1+"/code/SPT3G_Y1")
except Exception as err:
  R = False
  e=str(err).decode("utf-8")
logtest(R,"Copy in spt3g metadata cobaya files in "+arg1+"/code",yellow=e)

instclik = logtest(len(sys.argv)==3,"Use clik from",sys.argv[-1],"default cobaya installation",fail=False)
if not instclik:
  logtest(osp.lexists(arg1+"/code/planck"),"Check cobaya package contains clik","yes","no","Provide the path to a clik installation (version>=16.0)")
  clikroot=""
  for stp in os.walk(arg1+"/code/planck"):
    if "bin" in stp[1]:
      clikroot = stp[0]
      break
  logtest(clikroot,arg1+"/code/planck"+" contains a valid clik installation")
else:
  logtest(osp.lexists(arg2),"Check for availibility of clik install",yellow="not found, %s does not exists"%(arg2))
  clikroot=arg2

if instclik:
  if logtest(osp.lexists(arg1+"/code/planck"),"Check cobaya package contains clik","yes","no",fail=False):
    prevclik=True
    renam = arg1+"/code/planck_old"
    i=0
    ext = ""
    while osp.lexists(renam+ext):
      ext = "_%d"%i
      i+=1

    R = True
    e = ""
    try:
      os.rename(arg1+"/code/planck",renam+ext)
    except Exception as err:
      R = False
      e=str(err).decode("utf-8")
      pass
    logtest(R,"Rename old clik package to "+renam+ext,yellow=e)

  passit=""
  try:
    import astropy
    passit="astropy"
  except Exception:
    try:
      import pyfits
      passit="pyfits"
    except Exception:
      pass
  bew = logtest(passit,"Check for availability of astropy or pyfits",passit,"None",
          "Install astropy (recommended) or pyfits\nin a location reachable by your PYTHONPATH",fail=False)
  R = True
  e = ""
  try:
    os.mkdir(arg1+"/code/planck")
    os.symlink(arg2,arg1+"/code/planck/plc-3.1")
  except Exception as err:
    R = False
    e=str(err).decode("utf-8")
  logtest(R,"Create symlink ",arg1+"/code/planck/plc-3.1"+" -> "+arg2,yellow=e)

import os
shell = os.environ.get("SHELL","sh").lower()
sh = "sh"
if shell.split("/")[-1] in ("tcsh","csh"): 
  sh = "csh"
if shell.split("/")[-1] in ("zsh"): 
  sh = "zsh"
shelltest = "source %s/bin/clik_profile.%s;clik_print %s/data/spt_data/spt3g_Y1_v1_TTTEEE.clik"%(clikroot,sh,arg1)

R=True
e=""
try:
  cmd = subprocess.run(shelltest,shell=True,capture_output=True)
except Exception as err:
  R=False
  e=str(err).decode("utf-8")

logtest(cmd.returncode==0 and R,"Check that the clik package can run the spt3g likelihood",extrayellow="%s\n returned %d\n%s"%(shelltest,cmd.returncode,cmd.stderr.decode("utf-8")))
print(shelltest)
print(cmd.stdout.decode("utf-8"))
  
logtest(osp.lexists("params_SPT3GY1_TTTEEE_class_base.yaml.tmpl"),"Check that exmaple param file is available",yellow="Not found",extrayellow="Check your spt3g release. Cannot find params_SPT3GY1_class_base.yaml.tmpl in the cobaya_files directory")
txt=open("params_SPT3GY1_TTTEEE_class_base.yaml.tmpl").read()
ntxt = txt.replace("/path/to/cobaya/packages/code/",arg1+"/code")
R = True
e = ""
try:
  f = open("params_SPT3GY1_TTTEEE_class_base.yaml","w")
  print(ntxt,file=f)
  f.close()
except Exception as err:
  R = False
  e=str(err).decode("utf-8")
logtest(R,"Create exmaple parameter file params_SPT3GY1_TTTEEE_class_base.yaml",arg1+"/code/planck"+" -> "+arg2,yellow=e)

print("\n\n")
if bew:
  print(colors["BOLD"] + colors["BLUE"] + "Good to go ! Test with "+colors["NORMAL"])
else:
  print(colors["BOLD"] + colors["BLUE"] + "You need to install astropy or pyfits (see above) before testing with"+colors["NORMAL"])
print("      COBAYA_PACKAGES_PATH=%s cobaya-run %s/params_SPT3GY1_TTTEEE_class_base.yaml"%(arg1,os.getcwd()))
print("")
sys.exit(0)




